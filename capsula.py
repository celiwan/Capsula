# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.WindowModal)
        MainWindow.resize(810, 480)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icon/Icones/logo-capsula.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setObjectName("centralWidget")
        self.tabWidgetPumpAndMotor = QtWidgets.QTabWidget(self.centralWidget)
        self.tabWidgetPumpAndMotor.setGeometry(QtCore.QRect(0, 0, 800, 410))
        self.tabWidgetPumpAndMotor.setObjectName("tabWidgetPumpAndMotor")
        self.tabWidgetLaserControl = QtWidgets.QWidget()
        self.tabWidgetLaserControl.setObjectName("tabWidgetLaserControl")
        self.checkBoxLaser635nm = QtWidgets.QCheckBox(self.tabWidgetLaserControl)
        self.checkBoxLaser635nm.setGeometry(QtCore.QRect(10, 10, 300, 25))
        self.checkBoxLaser635nm.setObjectName("checkBoxLaser635nm")
        self.checkBoxLaser532nm = QtWidgets.QCheckBox(self.tabWidgetLaserControl)
        self.checkBoxLaser532nm.setGeometry(QtCore.QRect(10, 30, 300, 25))
        self.checkBoxLaser532nm.setObjectName("checkBoxLaser532nm")
        self.pushButtonSeeCamera = QtWidgets.QPushButton(self.tabWidgetLaserControl)
        self.pushButtonSeeCamera.setGeometry(QtCore.QRect(624, 30, 161, 20))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icon/Icones/camera.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonSeeCamera.setIcon(icon1)
        self.pushButtonSeeCamera.setObjectName("pushButtonSeeCamera")
        self.labelBeamImage = QtWidgets.QLabel(self.tabWidgetLaserControl)
        self.labelBeamImage.setGeometry(QtCore.QRect(10, 60, 299, 168))
        self.labelBeamImage.setFrameShape(QtWidgets.QFrame.Panel)
        self.labelBeamImage.setLineWidth(2)
        self.labelBeamImage.setAlignment(QtCore.Qt.AlignCenter)
        self.labelBeamImage.setObjectName("labelBeamImage")
        self.lineEditExposureTime = QtWidgets.QLineEdit(self.tabWidgetLaserControl)
        self.lineEditExposureTime.setGeometry(QtCore.QRect(754, 10, 31, 20))
        self.lineEditExposureTime.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lineEditExposureTime.setObjectName("lineEditExposureTime")
        self.labelExposureTime = QtWidgets.QLabel(self.tabWidgetLaserControl)
        self.labelExposureTime.setGeometry(QtCore.QRect(600, 10, 150, 20))
        self.labelExposureTime.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.labelExposureTime.setObjectName("labelExposureTime")
        self.labelHHWText = QtWidgets.QLabel(self.tabWidgetLaserControl)
        self.labelHHWText.setGeometry(QtCore.QRect(10, 230, 120, 20))
        self.labelHHWText.setObjectName("labelHHWText")
        self.labelHHWValue = QtWidgets.QLabel(self.tabWidgetLaserControl)
        self.labelHHWValue.setGeometry(QtCore.QRect(120, 230, 50, 20))
        self.labelHHWValue.setFrameShape(QtWidgets.QFrame.Box)
        self.labelHHWValue.setLineWidth(2)
        self.labelHHWValue.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.labelHHWValue.setObjectName("labelHHWValue")
        self.tabWidgetPumpAndMotor.addTab(self.tabWidgetLaserControl, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.labelDutyCycleM = QtWidgets.QLabel(self.tab)
        self.labelDutyCycleM.setGeometry(QtCore.QRect(20, 230, 100, 20))
        self.labelDutyCycleM.setObjectName("labelDutyCycleM")
        self.horizontalSliderDutyCycleM = QtWidgets.QSlider(self.tab)
        self.horizontalSliderDutyCycleM.setGeometry(QtCore.QRect(130, 230, 160, 20))
        self.horizontalSliderDutyCycleM.setMaximum(100)
        self.horizontalSliderDutyCycleM.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderDutyCycleM.setObjectName("horizontalSliderDutyCycleM")
        self.lcdNumberDutyCycleM = QtWidgets.QLCDNumber(self.tab)
        self.lcdNumberDutyCycleM.setGeometry(QtCore.QRect(300, 230, 51, 20))
        self.lcdNumberDutyCycleM.setObjectName("lcdNumberDutyCycleM")
        self.pushButtonDutyCycleM = QtWidgets.QPushButton(self.tab)
        self.pushButtonDutyCycleM.setGeometry(QtCore.QRect(360, 230, 150, 20))
        self.pushButtonDutyCycleM.setObjectName("pushButtonDutyCycleM")
        self.pushButtonStopMotor = QtWidgets.QPushButton(self.tab)
        self.pushButtonStopMotor.setGeometry(QtCore.QRect(530, 280, 150, 20))
        self.pushButtonStopMotor.setObjectName("pushButtonStopMotor")
        self.pushButtonStartMotor = QtWidgets.QPushButton(self.tab)
        self.pushButtonStartMotor.setGeometry(QtCore.QRect(360, 280, 150, 20))
        self.pushButtonStartMotor.setObjectName("pushButtonStartMotor")
        self.pushButtonChangeDirectionM = QtWidgets.QPushButton(self.tab)
        self.pushButtonChangeDirectionM.setGeometry(QtCore.QRect(530, 230, 150, 20))
        self.pushButtonChangeDirectionM.setObjectName("pushButtonChangeDirectionM")
        self.pushButtonRunAndGoBackM = QtWidgets.QPushButton(self.tab)
        self.pushButtonRunAndGoBackM.setGeometry(QtCore.QRect(360, 330, 150, 20))
        self.pushButtonRunAndGoBackM.setObjectName("pushButtonRunAndGoBackM")
        self.line = QtWidgets.QFrame(self.tab)
        self.line.setGeometry(QtCore.QRect(0, 170, 800, 3))
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setLineWidth(3)
        self.line.setMidLineWidth(2)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setObjectName("line")
        self.pushButtonRunAndGoBackP = QtWidgets.QPushButton(self.tab)
        self.pushButtonRunAndGoBackP.setGeometry(QtCore.QRect(360, 140, 150, 20))
        self.pushButtonRunAndGoBackP.setObjectName("pushButtonRunAndGoBackP")
        self.pushButtonStopPump = QtWidgets.QPushButton(self.tab)
        self.pushButtonStopPump.setGeometry(QtCore.QRect(530, 90, 150, 20))
        self.pushButtonStopPump.setObjectName("pushButtonStopPump")
        self.labelDutyCycleP = QtWidgets.QLabel(self.tab)
        self.labelDutyCycleP.setGeometry(QtCore.QRect(20, 40, 100, 20))
        self.labelDutyCycleP.setObjectName("labelDutyCycleP")
        self.pushButtonChangeDirectionP = QtWidgets.QPushButton(self.tab)
        self.pushButtonChangeDirectionP.setGeometry(QtCore.QRect(530, 40, 150, 20))
        self.pushButtonChangeDirectionP.setObjectName("pushButtonChangeDirectionP")
        self.horizontalSliderDutyCycleP = QtWidgets.QSlider(self.tab)
        self.horizontalSliderDutyCycleP.setGeometry(QtCore.QRect(130, 40, 160, 20))
        self.horizontalSliderDutyCycleP.setMaximum(100)
        self.horizontalSliderDutyCycleP.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderDutyCycleP.setObjectName("horizontalSliderDutyCycleP")
        self.pushButtonDutyCycleP = QtWidgets.QPushButton(self.tab)
        self.pushButtonDutyCycleP.setGeometry(QtCore.QRect(360, 40, 150, 20))
        self.pushButtonDutyCycleP.setObjectName("pushButtonDutyCycleP")
        self.pushButtonStartPump = QtWidgets.QPushButton(self.tab)
        self.pushButtonStartPump.setGeometry(QtCore.QRect(360, 90, 150, 20))
        self.pushButtonStartPump.setObjectName("pushButtonStartPump")
        self.lcdNumberDutyCycleP = QtWidgets.QLCDNumber(self.tab)
        self.lcdNumberDutyCycleP.setGeometry(QtCore.QRect(300, 40, 51, 20))
        self.lcdNumberDutyCycleP.setObjectName("lcdNumberDutyCycleP")
        self.labelMotorControl = QtWidgets.QLabel(self.tab)
        self.labelMotorControl.setGeometry(QtCore.QRect(20, 190, 300, 20))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.labelMotorControl.setFont(font)
        self.labelMotorControl.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.labelMotorControl.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.labelMotorControl.setLineWidth(1)
        self.labelMotorControl.setObjectName("labelMotorControl")
        self.labelPumpControl = QtWidgets.QLabel(self.tab)
        self.labelPumpControl.setGeometry(QtCore.QRect(20, 0, 300, 30))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.labelPumpControl.setFont(font)
        self.labelPumpControl.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.labelPumpControl.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.labelPumpControl.setLineWidth(1)
        self.labelPumpControl.setObjectName("labelPumpControl")
        self.checkBoxBrakeP = QtWidgets.QCheckBox(self.tab)
        self.checkBoxBrakeP.setGeometry(QtCore.QRect(530, 140, 231, 19))
        self.checkBoxBrakeP.setObjectName("checkBoxBrakeP")
        self.checkBoxBrakeM = QtWidgets.QCheckBox(self.tab)
        self.checkBoxBrakeM.setGeometry(QtCore.QRect(530, 330, 231, 19))
        self.checkBoxBrakeM.setObjectName("checkBoxBrakeM")
        self.tabWidgetPumpAndMotor.addTab(self.tab, "")
        self.tabWidgetDetection = QtWidgets.QWidget()
        self.tabWidgetDetection.setObjectName("tabWidgetDetection")
        self.labelDetectionThreshold = QtWidgets.QLabel(self.tabWidgetDetection)
        self.labelDetectionThreshold.setGeometry(QtCore.QRect(575, 10, 150, 20))
        self.labelDetectionThreshold.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.labelDetectionThreshold.setObjectName("labelDetectionThreshold")
        self.lineEditDetectionThreshold = QtWidgets.QLineEdit(self.tabWidgetDetection)
        self.lineEditDetectionThreshold.setGeometry(QtCore.QRect(575, 30, 105, 20))
        self.lineEditDetectionThreshold.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lineEditDetectionThreshold.setObjectName("lineEditDetectionThreshold")
        self.pushButtonStart = QtWidgets.QPushButton(self.tabWidgetDetection)
        self.pushButtonStart.setEnabled(False)
        self.pushButtonStart.setGeometry(QtCore.QRect(125, 325, 105, 20))
        self.pushButtonStart.setObjectName("pushButtonStart")
        self.pushButtonStop = QtWidgets.QPushButton(self.tabWidgetDetection)
        self.pushButtonStop.setEnabled(False)
        self.pushButtonStop.setGeometry(QtCore.QRect(230, 325, 105, 20))
        self.pushButtonStop.setObjectName("pushButtonStop")
        self.pushButtonClear = QtWidgets.QPushButton(self.tabWidgetDetection)
        self.pushButtonClear.setEnabled(False)
        self.pushButtonClear.setGeometry(QtCore.QRect(335, 345, 110, 20))
        self.pushButtonClear.setObjectName("pushButtonClear")
        self.labelCapsuleCounter = QtWidgets.QLabel(self.tabWidgetDetection)
        self.labelCapsuleCounter.setGeometry(QtCore.QRect(435, 320, 120, 20))
        self.labelCapsuleCounter.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.labelCapsuleCounter.setObjectName("labelCapsuleCounter")
        self.lcdNumberCapsuleCounter = QtWidgets.QLCDNumber(self.tabWidgetDetection)
        self.lcdNumberCapsuleCounter.setEnabled(False)
        self.lcdNumberCapsuleCounter.setGeometry(QtCore.QRect(485, 335, 75, 25))
        self.lcdNumberCapsuleCounter.setObjectName("lcdNumberCapsuleCounter")
        self.radioButtonContinu = QtWidgets.QRadioButton(self.tabWidgetDetection)
        self.radioButtonContinu.setGeometry(QtCore.QRect(610, 340, 200, 19))
        self.radioButtonContinu.setObjectName("radioButtonContinu")
        self.radioButtonSegmente = QtWidgets.QRadioButton(self.tabWidgetDetection)
        self.radioButtonSegmente.setGeometry(QtCore.QRect(610, 325, 200, 19))
        self.radioButtonSegmente.setChecked(True)
        self.radioButtonSegmente.setObjectName("radioButtonSegmente")
        self.pushButtonBlank = QtWidgets.QPushButton(self.tabWidgetDetection)
        self.pushButtonBlank.setGeometry(QtCore.QRect(335, 325, 110, 20))
        self.pushButtonBlank.setObjectName("pushButtonBlank")
        self.labelCurrentValueText = QtWidgets.QLabel(self.tabWidgetDetection)
        self.labelCurrentValueText.setGeometry(QtCore.QRect(10, 320, 150, 20))
        self.labelCurrentValueText.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.labelCurrentValueText.setObjectName("labelCurrentValueText")
        self.labelCurrentValue = QtWidgets.QLabel(self.tabWidgetDetection)
        self.labelCurrentValue.setGeometry(QtCore.QRect(10, 340, 65, 20))
        self.labelCurrentValue.setAutoFillBackground(False)
        self.labelCurrentValue.setFrameShape(QtWidgets.QFrame.Box)
        self.labelCurrentValue.setFrameShadow(QtWidgets.QFrame.Plain)
        self.labelCurrentValue.setLineWidth(1)
        self.labelCurrentValue.setMidLineWidth(0)
        self.labelCurrentValue.setText("")
        self.labelCurrentValue.setTextFormat(QtCore.Qt.PlainText)
        self.labelCurrentValue.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.labelCurrentValue.setObjectName("labelCurrentValue")
        self.labelLength = QtWidgets.QLabel(self.tabWidgetDetection)
        self.labelLength.setGeometry(QtCore.QRect(575, 50, 191, 20))
        self.labelLength.setObjectName("labelLength")
        self.lineEditLength = QtWidgets.QLineEdit(self.tabWidgetDetection)
        self.lineEditLength.setGeometry(QtCore.QRect(575, 70, 105, 20))
        self.lineEditLength.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lineEditLength.setObjectName("lineEditLength")
        self.labelSamplingPeriod = QtWidgets.QLabel(self.tabWidgetDetection)
        self.labelSamplingPeriod.setGeometry(QtCore.QRect(575, 130, 150, 20))
        self.labelSamplingPeriod.setObjectName("labelSamplingPeriod")
        self.lineEditSamplingPeriod = QtWidgets.QLineEdit(self.tabWidgetDetection)
        self.lineEditSamplingPeriod.setGeometry(QtCore.QRect(575, 150, 105, 20))
        self.lineEditSamplingPeriod.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lineEditSamplingPeriod.setObjectName("lineEditSamplingPeriod")
        self.labelMinimumSize = QtWidgets.QLabel(self.tabWidgetDetection)
        self.labelMinimumSize.setGeometry(QtCore.QRect(575, 90, 211, 20))
        self.labelMinimumSize.setObjectName("labelMinimumSize")
        self.lineEditMinimumSize = QtWidgets.QLineEdit(self.tabWidgetDetection)
        self.lineEditMinimumSize.setGeometry(QtCore.QRect(575, 110, 105, 20))
        self.lineEditMinimumSize.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lineEditMinimumSize.setObjectName("lineEditMinimumSize")
        self.labelConsole = QtWidgets.QLabel(self.tabWidgetDetection)
        self.labelConsole.setGeometry(QtCore.QRect(575, 180, 210, 120))
        self.labelConsole.setFrameShape(QtWidgets.QFrame.Box)
        self.labelConsole.setText("")
        self.labelConsole.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.labelConsole.setObjectName("labelConsole")
        self.tabWidgetPumpAndMotor.addTab(self.tabWidgetDetection, "")
        MainWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 800, 20))
        self.menuBar.setObjectName("menuBar")
        self.menuFile = QtWidgets.QMenu(self.menuBar)
        self.menuFile.setObjectName("menuFile")
        self.menuOpen = QtWidgets.QMenu(self.menuFile)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icon/Icones/open.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuOpen.setIcon(icon2)
        self.menuOpen.setObjectName("menuOpen")
        self.menuSave = QtWidgets.QMenu(self.menuFile)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icon/Icones/save.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuSave.setIcon(icon3)
        self.menuSave.setObjectName("menuSave")
        self.menuActions = QtWidgets.QMenu(self.menuBar)
        self.menuActions.setObjectName("menuActions")
        self.menuOptions = QtWidgets.QMenu(self.menuBar)
        self.menuOptions.setObjectName("menuOptions")
        MainWindow.setMenuBar(self.menuBar)
        self.actionOpen_laser_configuration = QtWidgets.QAction(MainWindow)
        self.actionOpen_laser_configuration.setObjectName("actionOpen_laser_configuration")
        self.actionSave_laser_configuration = QtWidgets.QAction(MainWindow)
        self.actionSave_laser_configuration.setObjectName("actionSave_laser_configuration")
        self.actionOpen_pump_configuration = QtWidgets.QAction(MainWindow)
        self.actionOpen_pump_configuration.setObjectName("actionOpen_pump_configuration")
        self.actionSave_pump_configuration = QtWidgets.QAction(MainWindow)
        self.actionSave_pump_configuration.setObjectName("actionSave_pump_configuration")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icon/Icones/quit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionQuit.setIcon(icon4)
        self.actionQuit.setObjectName("actionQuit")
        self.actionStart_Aquisition = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icon/Icones/play.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionStart_Aquisition.setIcon(icon5)
        self.actionStart_Aquisition.setObjectName("actionStart_Aquisition")
        self.actionStop_Aquisition = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icon/Icones/stop.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionStop_Aquisition.setIcon(icon6)
        self.actionStop_Aquisition.setObjectName("actionStop_Aquisition")
        self.actionPause = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icon/Icones/pause.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPause.setIcon(icon7)
        self.actionPause.setObjectName("actionPause")
        self.actionRecord_video_with_detection = QtWidgets.QAction(MainWindow)
        self.actionRecord_video_with_detection.setCheckable(True)
        self.actionRecord_video_with_detection.setObjectName("actionRecord_video_with_detection")
        self.actionLive_and_record_video_with_detection = QtWidgets.QAction(MainWindow)
        self.actionLive_and_record_video_with_detection.setCheckable(True)
        self.actionLive_and_record_video_with_detection.setObjectName("actionLive_and_record_video_with_detection")
        self.actionLaunch_motor_with_detection = QtWidgets.QAction(MainWindow)
        self.actionLaunch_motor_with_detection.setCheckable(True)
        self.actionLaunch_motor_with_detection.setChecked(False)
        self.actionLaunch_motor_with_detection.setObjectName("actionLaunch_motor_with_detection")
        self.actionOpen_motor_configuration = QtWidgets.QAction(MainWindow)
        self.actionOpen_motor_configuration.setObjectName("actionOpen_motor_configuration")
        self.actionSave_motor_configuration = QtWidgets.QAction(MainWindow)
        self.actionSave_motor_configuration.setObjectName("actionSave_motor_configuration")
        self.actionSave_detection_configuration = QtWidgets.QAction(MainWindow)
        self.actionSave_detection_configuration.setObjectName("actionSave_detection_configuration")
        self.actionOpen_detection_configuration = QtWidgets.QAction(MainWindow)
        self.actionOpen_detection_configuration.setObjectName("actionOpen_detection_configuration")
        self.actionLaunch_pump_with_detection = QtWidgets.QAction(MainWindow)
        self.actionLaunch_pump_with_detection.setCheckable(True)
        self.actionLaunch_pump_with_detection.setObjectName("actionLaunch_pump_with_detection")
        self.menuOpen.addAction(self.actionOpen_pump_configuration)
        self.menuOpen.addAction(self.actionOpen_motor_configuration)
        self.menuOpen.addAction(self.actionOpen_detection_configuration)
        self.menuSave.addAction(self.actionSave_pump_configuration)
        self.menuSave.addAction(self.actionSave_motor_configuration)
        self.menuSave.addAction(self.actionSave_detection_configuration)
        self.menuFile.addAction(self.menuOpen.menuAction())
        self.menuFile.addAction(self.menuSave.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuActions.addAction(self.actionStart_Aquisition)
        self.menuActions.addAction(self.actionPause)
        self.menuActions.addAction(self.actionStop_Aquisition)
        self.menuOptions.addAction(self.actionRecord_video_with_detection)
        self.menuOptions.addAction(self.actionLive_and_record_video_with_detection)
        self.menuOptions.addSeparator()
        self.menuOptions.addAction(self.actionLaunch_motor_with_detection)
        self.menuOptions.addAction(self.actionLaunch_pump_with_detection)
        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menuActions.menuAction())
        self.menuBar.addAction(self.menuOptions.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidgetPumpAndMotor.setCurrentIndex(0)
        self.horizontalSliderDutyCycleM.valueChanged['int'].connect(self.lcdNumberDutyCycleM.display)
        self.horizontalSliderDutyCycleP.valueChanged['int'].connect(self.lcdNumberDutyCycleP.display)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Capsula"))
        self.checkBoxLaser635nm.setText(_translate("MainWindow", "Laser 635 nm"))
        self.checkBoxLaser532nm.setText(_translate("MainWindow", "Laser 532 nm"))
        self.pushButtonSeeCamera.setText(_translate("MainWindow", " See camera"))
        self.labelBeamImage.setText(_translate("MainWindow", "Launch camera to have image"))
        self.lineEditExposureTime.setText(_translate("MainWindow", "50"))
        self.labelExposureTime.setText(_translate("MainWindow", "Exposure time (µs) :"))
        self.labelHHWText.setText(_translate("MainWindow", "Half-heigh width :"))
        self.labelHHWValue.setText(_translate("MainWindow", "0"))
        self.tabWidgetPumpAndMotor.setTabText(self.tabWidgetPumpAndMotor.indexOf(self.tabWidgetLaserControl), _translate("MainWindow", "Laser control"))
        self.labelDutyCycleM.setText(_translate("MainWindow", "Duty cycle (%) :"))
        self.pushButtonDutyCycleM.setText(_translate("MainWindow", "Send duty cycle"))
        self.pushButtonStopMotor.setText(_translate("MainWindow", "Stop motor"))
        self.pushButtonStartMotor.setText(_translate("MainWindow", "Start motor"))
        self.pushButtonChangeDirectionM.setText(_translate("MainWindow", "Change direction"))
        self.pushButtonRunAndGoBackM.setText(_translate("MainWindow", "Run and go back"))
        self.pushButtonRunAndGoBackP.setText(_translate("MainWindow", "Run and go back"))
        self.pushButtonStopPump.setText(_translate("MainWindow", "Stop pump"))
        self.labelDutyCycleP.setText(_translate("MainWindow", "Duty cycle (%) :"))
        self.pushButtonChangeDirectionP.setText(_translate("MainWindow", "Change direction"))
        self.pushButtonDutyCycleP.setText(_translate("MainWindow", "Send duty cycle"))
        self.pushButtonStartPump.setText(_translate("MainWindow", "Start pump"))
        self.labelMotorControl.setText(_translate("MainWindow", "Motor control"))
        self.labelPumpControl.setText(_translate("MainWindow", "Pump control"))
        self.checkBoxBrakeP.setText(_translate("MainWindow", "Brake enabled"))
        self.checkBoxBrakeM.setText(_translate("MainWindow", "Brake enabled"))
        self.tabWidgetPumpAndMotor.setTabText(self.tabWidgetPumpAndMotor.indexOf(self.tab), _translate("MainWindow", "Pump and motor"))
        self.labelDetectionThreshold.setText(_translate("MainWindow", "Detection threshold (%)"))
        self.lineEditDetectionThreshold.setText(_translate("MainWindow", "0.5"))
        self.pushButtonStart.setText(_translate("MainWindow", "Start detection"))
        self.pushButtonStop.setText(_translate("MainWindow", "Stop detection"))
        self.pushButtonClear.setText(_translate("MainWindow", "Clear"))
        self.pushButtonClear.setShortcut(_translate("MainWindow", "C"))
        self.labelCapsuleCounter.setText(_translate("MainWindow", "Capsule counter"))
        self.radioButtonContinu.setText(_translate("MainWindow", "Continuous display"))
        self.radioButtonSegmente.setText(_translate("MainWindow", "Segmented display"))
        self.pushButtonBlank.setText(_translate("MainWindow", "Make reference"))
        self.pushButtonBlank.setShortcut(_translate("MainWindow", "M"))
        self.labelCurrentValueText.setText(_translate("MainWindow", "Current value"))
        self.labelLength.setText(_translate("MainWindow", "Length threshold (time step)"))
        self.lineEditLength.setText(_translate("MainWindow", "3"))
        self.labelSamplingPeriod.setText(_translate("MainWindow", "Sampling period (ms)"))
        self.lineEditSamplingPeriod.setText(_translate("MainWindow", "25"))
        self.labelMinimumSize.setText(_translate("MainWindow", "In/Out Capsule threshold (%)"))
        self.lineEditMinimumSize.setText(_translate("MainWindow", "0.5"))
        self.tabWidgetPumpAndMotor.setTabText(self.tabWidgetPumpAndMotor.indexOf(self.tabWidgetDetection), _translate("MainWindow", "Detection and results"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuOpen.setTitle(_translate("MainWindow", "Open..."))
        self.menuSave.setTitle(_translate("MainWindow", "Save..."))
        self.menuActions.setTitle(_translate("MainWindow", "Actions"))
        self.menuOptions.setTitle(_translate("MainWindow", "Options"))
        self.actionOpen_laser_configuration.setText(_translate("MainWindow", "Open laser configuration"))
        self.actionSave_laser_configuration.setText(_translate("MainWindow", "Save laser configuration"))
        self.actionOpen_pump_configuration.setText(_translate("MainWindow", "Open pump configuration"))
        self.actionSave_pump_configuration.setText(_translate("MainWindow", "Save pump configuration"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionStart_Aquisition.setText(_translate("MainWindow", "Start acquisition"))
        self.actionStart_Aquisition.setShortcut(_translate("MainWindow", "F5"))
        self.actionStop_Aquisition.setText(_translate("MainWindow", "Stop acquisition"))
        self.actionStop_Aquisition.setShortcut(_translate("MainWindow", "Esc"))
        self.actionPause.setText(_translate("MainWindow", "Pause acquisition"))
        self.actionPause.setShortcut(_translate("MainWindow", "Space"))
        self.actionRecord_video_with_detection.setText(_translate("MainWindow", "Record video with detection"))
        self.actionLive_and_record_video_with_detection.setText(_translate("MainWindow", "Live and record video with detection"))
        self.actionLaunch_motor_with_detection.setText(_translate("MainWindow", "Launch motor with detection"))
        self.actionOpen_motor_configuration.setText(_translate("MainWindow", "Open motor configuration"))
        self.actionSave_motor_configuration.setText(_translate("MainWindow", "Save motor configuration"))
        self.actionSave_detection_configuration.setText(_translate("MainWindow", "Save detection configuration"))
        self.actionOpen_detection_configuration.setText(_translate("MainWindow", "Open detection configuration"))
        self.actionLaunch_pump_with_detection.setText(_translate("MainWindow", "Launch pump with detection"))

import resources_rc
